@{
    ViewData["Title"] = "Cart";
}

<div class="container mt-5">
    <h2>Your Cart</h2>
    <input type="hidden" id="bookingId" value="@Model.BookingId" />
    <div id="cartItems" class="row">
        @if (Model != null && Model.Tickets != null)
        {
            foreach (var ticket in Model.Tickets)
            {
                <div class="col-md-4">
                    <div class="card p-3 mb-3 shadow-sm">
                        <h5>@ticket.PlayName</h5>
                        <p><strong>Seat:</strong> @ticket.SeatNumber</p>

                        <label class="fw-bold">Age:</label>
                        <input type="number" value="@ticket.Age" class="form-control age-input" data-id="@ticket.TicketId">

                        <label class="fw-bold mt-2">Pricing Type:</label>
                        <select class="form-control pricing-type" data-id="@ticket.TicketId" onchange="updateTotal()">
                            @foreach (var pricingType in Model.PricingTypes)
                            {
                                <option value="@pricingType.Pricingid" data-price="@pricingType.Price"
                                    selected="@(ticket.PricingId == pricingType.Pricingid ? "selected" : null)">
                                    @pricingType.Band - £@pricingType.Price
                                </option>
                            }
                        </select>

                        <!-- Total Price for each ticket -->
                        <p class="mt-2"><strong>Total:</strong> £<span class="ticket-total" data-id="@ticket.TicketId">@ticket.Price</span></p>
                    </div>
                </div>
            }
        }
        else
        {
            <p>No tickets in your cart.</p>
        }
    </div>

    <!-- Discount Code Section -->
    <div class="mt-4">
        <label class="fw-bold">Discount Code:</label>
        <div class="input-group">
            @if (Model.Discount != null)
            {
                <input type="text" id="discountCode" class="form-control" value="@Model.Discount.Code" readonly>
            }
            else
            {
                <input type="text" id="discountCode" class="form-control" placeholder="Enter discount code">
                <button class="btn btn-primary" onclick="applyDiscount()">Apply</button>
            }
        </div>
        <p id="discountMessage" class="mt-2">
            @if (Model.Discount != null)
            {
                <span class="text-success">Discount Applied! Code: <strong>@Model.Discount.Code</strong> - You saved <strong>£@Model.Discount.DiscountAmount</strong>.</span>
            }
        </p>
    </div>


    <!-- Cart Summary -->
    <div class="mt-4 p-3 border rounded shadow-sm">
        <h4>Cart Summary</h4>
        <p><strong>Subtotal:</strong> £<span id="subtotal">0.00</span></p>
        <p><strong>Discount:</strong> -£<span id="discountAmount">0.00</span></p>
        <hr>
        <h5><strong>Final Total:</strong> £<span id="finalTotal">0.00</span></h5>
    </div>

    <button class="btn btn-success mt-3" onclick="proceedToCheckout()">Proceed to Checkout</button>
</div>

<script>
    let updatedTickets = [];
    let discountValue = 0;

    function updateTotal() {
        let subtotal = 0;

        document.querySelectorAll(".pricing-type").forEach(element => {
            let ticketId = element.getAttribute("data-id");
            let price = parseFloat(element.options[element.selectedIndex].getAttribute("data-price")) || 0;
            
            // Update total for this ticket
            document.querySelector(`.ticket-total[data-id='${ticketId}']`).innerText = price.toFixed(2);

            // Add to subtotal
            subtotal += price;
        });

        // Update displayed values
        document.getElementById("subtotal").innerText = subtotal.toFixed(2);
        let finalTotal = subtotal - discountValue;
        document.getElementById("finalTotal").innerText = finalTotal.toFixed(2);
    }

    // Capture changes in age and pricing
    document.querySelectorAll(".age-input, .pricing-type").forEach(element => {
        element.addEventListener("change", function () {
            let ticketId = this.getAttribute("data-id");
            let age = document.querySelector(`.age-input[data-id='${ticketId}']`).value;
            let pricingId = document.querySelector(`.pricing-type[data-id='${ticketId}']`).value;

            let existingTicket = updatedTickets.find(t => t.ticketId == ticketId);
            if (existingTicket) {
                existingTicket.age = age;
                existingTicket.pricingId = pricingId;
            } else {
                updatedTickets.push({ ticketId, age, pricingId });
            }

            updateTotal();
        });
    });

    function applyDiscount() {
        let discountCode = document.getElementById("discountCode").value.trim();
        let discountMessage = document.getElementById("discountMessage");
        let bookingId = document.getElementById("bookingId").value; 

        if (!discountCode) {
            discountMessage.innerText = "Please enter a discount code.";
            discountMessage.style.color = "red";
            return;
        }

        fetch(`/api/cart/applydiscount`, {
            method: 'Post',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ bookingId,discountCode })
        })
        .then(response => response.json())
        .then(data => {
            console.log("Discount Response:", data);
            if (data && data.discountAmount) {
                discountValue = parseFloat(data.discountAmount) || 0;
                document.getElementById("discountAmount").innerText = discountValue.toFixed(2);

                let subtotal = parseFloat(document.getElementById("subtotal").innerText) || 0;
                let finalTotal = subtotal - discountValue;
                document.getElementById("finalTotal").innerText = finalTotal.toFixed(2);

                discountMessage.innerText = `Discount Applied! You saved £${discountValue.toFixed(2)}.`;
                discountMessage.style.color = "green";
            } else {
                discountMessage.innerText = "Invalid Discount Code.";
                discountMessage.style.color = "red";
            }
        }).catch(error => {
            discountMessage.innerText = "Error checking discount code.";
            discountMessage.style.color = "red";
            console.error("Error:", error);
        });

    }

    function proceedToCheckout() {
        console.log("Updated Tickets:", updatedTickets);

        if (!updatedTickets.length) {
            if (confirm("No changes detected. Proceed to checkout?")) {
                window.location.href = "/checkout";
            }
            return;
        }

        if (confirm("Are you sure you want to proceed to checkout?")) {
            fetch('/api/bookings/update-tickets', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ tickets: updatedTickets }) // Send all updates
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Tickets updated! Redirecting to checkout...");
                    window.location.href = "/checkout";  // Redirect after update
                } else {
                    alert("Failed to update tickets. Please try again.");
                }
            })
            .catch(error => {
                console.error("Error updating tickets:", error);
                alert("Error updating tickets. Please check your connection.");
            });
        }
}


    // Initial total update
    updateTotal();
</script>
