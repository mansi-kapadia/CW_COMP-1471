@using System.Text.Json
@{
    ViewData["Title"] = "Cart";
}

<div class="container mt-5">
    <h2>Your Cart</h2>
    <input type="hidden" id="bookingId" value="@Model.BookingId" />
    
    <div id="cartItems" class="row">
        @if (Model != null && Model.Tickets != null)
        {
            foreach (var ticket in Model.Tickets)
            {
               <div class="col-md-4 ">
                    <div class="card p-3 mb-3 shadow-sm">
                       <div class="d-flex justify-content-between align-items-center">
                            <h5 class="mb-0 flex-grow-1">@ticket.PlayName</h5>  
                            <div class="text-end">
                                <label class="fw-bold d-block">Price:</label>
                                <p class="mb-0 fs-5">£<span class="ticket-total" data-id="@ticket.TicketId">@ticket.Amount</span></p>
                            </div>
                        </div>


                        <p><strong>Seat:</strong> @ticket.SeatNumber</p>

                        <div class="d-flex align-items-center gap-2">
                            <div class="w-50">
                                <label class="fw-bold mb-1">Age:</label>
                                <input type="number" value="@ticket.Age" class="form-control form-control-sm age-input" data-id="@ticket.TicketId">
                            </div>
                        </div> 
                        
                         
                    </div>
                </div>

            }
        }
        else
        {
            <p>No tickets in your cart.</p>
        }
    </div>

    <!-- Discount Code Section -->
    <div class="mt-4 p-3 border rounded shadow-sm">
        <h4>Discount Code</h4>
        <div class="input-group">
            @if (Model.Discount != null)
            {
                <input type="text" id="discountCode" class="form-control" value="@Model.Discount.Code" readonly>
            }
            else
            {
                <input type="text" id="discountCode" class="form-control" placeholder="Enter discount code">
                <button class="btn btn-success" onclick="applyDiscount()">Apply</button>
            }
        </div>
        <p id="discountMessage" class="mt-2">
            @if (Model.Discount != null)
            {
                <span class="text-success">Discount Applied! Code: <strong>@Model.Discount.Code</strong> - You saved <strong>£@Model.Discount.DiscountAmount</strong>.</span>
            }
        </p>
    </div>

    <!--Package Summary Section -->
    <div class="mt-4 p-3 border rounded shadow-sm package-summary">
        <h4>Package Summary</h4>
        @if (Model.Package != null && Model.Package.FreeTicketCount > 0)
        {
            <p class="text-success">
                🎟 **You have received** <strong>@Model.Package.FreeTicketCount</strong> **free ticket(s)** as part of the 
                <strong>@Model.Package.Name</strong> package!
            </p>
        }
        else
        {
            <p class="text-muted">No package applied.</p>
        }
    </div>

    <!-- Booking Summary -->
    <div class="mt-4 p-3 border rounded shadow-sm">
        <h4>Summary</h4>
        <p><strong>Subtotal:</strong> £<span id="subtotal">0.0</span></p>
         @if (Model.Discount != null)
         {
                <p><strong>Discount:</strong> -£<span id="discountAmount">@Model.Discount.DiscountAmount</span></p>
         }
        <hr>
        <h5><strong>Final Total:</strong> £<span id="finalTotal">0.00</span></h5>
    </div>

    <button class="btn btn-success mt-3" onclick="proceedToCheckout()" @(Model != null && Model.Tickets != null ? "" : "disabled")>
        Proceed to Checkout
    </button>
</div>


<script>
    let updatedTickets = [];
    let discountValue = 0; 

    window.onload = function () {
        updateTotal(); 
        attachEventListeners();
    };

    function updateTotal() {
        let subtotal = 0;
        
        console.log("updateTotal");

        document.querySelectorAll(".ticket-total").forEach(element => {
            let price = parseFloat(element.innerText) || 0;
            subtotal += price;
        });

        console.log("subtotal", subtotal);

        // Retrieve discount amount safely
        let discountValue = 0;

        let res = document.getElementById("discountAmount");

        if (res) {
            discountValue = parseFloat(res.innerText) || 0;
        }

        console.log("discountValue",discountValue);

        // Recalculate total with discount applied
        let finalTotal = subtotal - discountValue;

        // Ensure discount does not make the total negative
        finalTotal = Math.max(finalTotal, 0);

        console.log("finalTotal",finalTotal);

        // Update displayed values
        document.getElementById("subtotal").innerText = subtotal.toFixed(2);
        document.getElementById("finalTotal").innerText = finalTotal.toFixed(2);
    }

    // Attach event listeners for age and pricing selection changes
    function attachEventListeners() {
        document.querySelectorAll(".age-input").forEach(element => {
            element.addEventListener("change", function () {
                let ticketId = this.getAttribute("data-id");
                let age = document.querySelector(`.age-input[data-id='${ticketId}']`).value;

                let existingTicket = updatedTickets.find(t => t.ticketId == ticketId);
                if (existingTicket) {
                    existingTicket.age = age;
                    existingTicket.pricingId = pricingId;
                } else {
                    updatedTickets.push({ ticketId, age, pricingId });
                }

                updateTotal();
            });
        });
    }

    // Apply discount and update total
    function applyDiscount() {
        console.log("applyDiscount");
        let discountCode = document.getElementById("discountCode").value.trim();
        let discountMessage = document.getElementById("discountMessage");
        let bookingId = document.getElementById("bookingId").value;
        let ages = Array.from(document.querySelectorAll('.age-input')).map(input => input.value);

        if (!discountCode) {
            discountMessage.innerText = "Please enter a discount code.";
            discountMessage.style.color = "red";
            return;
        }

        fetch(`/api/discount/applydiscount`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ bookingId, discountCode, ages })
        })
        .then(response => response.json())
        .then(data => {
            console.log("then",data.discountAmount);
            if (data && data.discountAmount) {
                discountValue = parseFloat(data.discountAmount) || 0;
                updateTotal(); // Recalculate totals with new discount
                discountMessage.innerText = `Discount Applied! You saved £${discountValue.toFixed(2)}.`;
                discountMessage.style.color = "green";
            } else {
                discountMessage.innerText = data.errorMessage || "Invalid Discount Code.";
                discountMessage.style.color = "red";
            }
        }).catch(error => {
            discountMessage.innerText = "Error checking discount code.";
            discountMessage.style.color = "red";
        });
    }

    // Proceed to checkout
    function proceedToCheckout() {

        if (!updatedTickets.length) {
            if (confirm("Proceed to checkout?")) {
                window.location.href = "/api/checkout";
            }
            return;
        }

        if (confirm("Are you sure you want to proceed to checkout?")) {
            fetch('/api/bookings/update-bookings', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ tickets: updatedTickets }) 
            })
            .then(response => response.json())
            .then(data => {

                if (data.success && data.bookingId) {
                    alert("Tickets updated! Redirecting to checkout...");

                    window.location.href = `/api/checkout`;
                } else {
                    alert("Failed to update tickets. Please try again.");
                }
            })
            .catch(error => {
                alert("Error updating tickets. Please check your connection.");
            });
        }
    }

</script>
